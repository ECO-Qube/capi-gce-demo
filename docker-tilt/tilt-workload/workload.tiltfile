load('ext://kubectl_build', 'kubectl_build')
load("../consts.tiltfile", "consts")

# Return a list containing the result of local(command) split by newlines.
def local_as_list(command):
   return str(local(command)).rstrip("\n").split("\n")

allow_k8s_contexts("{0}-admin@{0}".format(consts.get("wkld_cluster_name")))

if not os.path.exists("target-exporter"):
  fail('Please "git clone" the target-exporter repo in folder "tilt-workload".')

if not os.path.exists("job-submission-platform"):
  fail('Please "git clone" the job-submission-platform repo in folder "tilt-workload".')

# Deploy target-exporter
# Inject node names
nodes_name_prefix = "{}-{}".format(consts.get("wkld_cluster_name"), consts.get("machinedeploy_name"))
node_names = local_as_list("kubectl get nodes -o custom-columns=NAME:.metadata.name | grep {}".format(nodes_name_prefix))
random_targets = local_as_list("shuf -i 1-100 -n {}".format(len(node_names)))
config_targets = []
for i in range(0, len(node_names)):
  config_targets.append("config.targets.{}={}".format(node_names[i], random_targets[i]))

kubeconfig = "{}.kubeconfig".format(consts.get("wkld_cluster_name"))
if str(read_file("../{}".format(kubeconfig))) != str(read_file("target-exporter/charts/target-exporter/ecoqube-dev.kubeconfig")):
  print("kubeconfig has changed")
  local("cp ../{} target-exporter/charts/target-exporter/ecoqube-dev.kubeconfig".format(kubeconfig))

kubectl_build("docker.io/cristianohelio/target-exporter", "./target-exporter")

k8s_yaml("ns.yaml")
k8s_yaml(helm("./target-exporter/charts/target-exporter", "target-exporter", namespace="target-exporter", set=config_targets))
k8s_resource(
  "target-exporter", port_forwards=8080
)
#local_resource("prometheus port-forward", serve_cmd="kubectl port-forward -n monitoring svc/prom-service 9090:9090")