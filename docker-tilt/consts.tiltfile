# Todo: can be improved, for example by having a dict with key: <name_of_kind> and value: list[<resource_for_kind>]
# or maybe look into "objects" param in k8s_resource, it might be better
consts = {
    "kinds":
      ["ClusterResourceSet", "KubeadmControlPlane", "ClusterClass", "DockerClusterTemplate",
       "KubeadmControlPlaneTemplate", "DockerMachineTemplate", "DockerMachineTemplate", "KubeadmConfigTemplate", "Cluster"],
    "crs_names":
      ["prometheus", "prometheus-node-exporter", "custom-metrics", "custom-metrics-tls-secret", "tas", "tas-tls-secret",
       "extender", "calico"],
    "capi_names":
      ["ecoqube-tas", "ecoqube-tas-cluster", "ecoqube-tas-control-plane:kubeadmcontrolplanetemplate",
       "ecoqube-tas-control-plane:dockermachinetemplate", "ecoqube-tas-default-worker-machinetemplate", "ecoqube-tas-default-worker-bootstraptemplate",
       "ecoqube-tas-default-worker-bootstraptemplate", "ecoqube-wkld-dev"],
    "mgmt_cluster_name": os.getenv("CAPI_KIND_CLUSTER_NAME", "ecoqube-mgmt-dev"),
    "wkld_cluster_name": os.getenv("CAPI_WKLD_CLUSTER_NAME", "ecoqube-wkld-dev"),
    "machinedeploy_name": "default-worker-topo" # in kind: Cluster, must match spec.workers.machineDeployments[0].name
}

