apiVersion: v1
data:
  custom-metrics-apiserver.yaml: "---\nkind: Namespace\napiVersion: v1\nmetadata:\n
    \ name: custom-metrics\n  labels:\n    name: custom-metrics\n---\n# Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-apiserver-auth-delegator-cluster-role-binding.yaml\napiVersion:
    rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: custom-metrics:system:auth-delegator\nroleRef:\n
    \ apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:auth-delegator\nsubjects:\n-
    kind: ServiceAccount\n  name: custom-metrics-apiserver\n  namespace: custom-metrics\n---\n#
    Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-apiserver-auth-reader-role-binding.yaml\napiVersion:
    rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: custom-metrics-auth-reader
    \n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n
    \ kind: Role\n  name: extension-apiserver-authentication-reader\nsubjects:\n-
    kind: ServiceAccount\n  name: custom-metrics-apiserver\n  namespace: custom-metrics\n---\n#
    Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-apiserver-deployment.yaml\napiVersion:
    apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: custom-metrics-apiserver\n
    \ name: custom-metrics-apiserver\n  namespace: custom-metrics\nspec:\n  replicas:
    1\n  selector:\n    matchLabels:\n      app: custom-metrics-apiserver\n  template:\n
    \   metadata:\n      labels:\n        app: custom-metrics-apiserver\n      name:
    custom-metrics-apiserver\n    spec:\n      serviceAccountName: custom-metrics-apiserver\n
    \     containers:\n      - name: custom-metrics-apiserver\n        image: directxman12/k8s-prometheus-adapter-amd64\n
    \       imagePullPolicy: IfNotPresent\n        args:\n        - --secure-port=6443\n
    \       - --tls-cert-file=/var/run/serving-cert/tls.crt\n        - --tls-private-key-file=/var/run/serving-cert/tls.key\n
    \       - --logtostderr=true\n        - --prometheus-url=http://prom-service.monitoring.svc:9090/\n
    \       - --metrics-relist-interval=1m\n        - --v=10\n        - --config=/etc/adapter/config.yaml\n
    \       ports:\n        - containerPort: 6443\n        volumeMounts:\n        -
    mountPath: /var/run/serving-cert\n          name: volume-serving-cert\n          readOnly:
    true\n        - mountPath: /etc/adapter/\n          name: config\n          readOnly:
    true\n        - mountPath: /tmp\n          name: tmp-vol\n      volumes:\n      -
    name: volume-serving-cert\n        secret:\n          secretName: cm-adapter-serving-certs\n
    \     - name: config\n        configMap:\n          name: adapter-config\n      -
    name: tmp-vol\n        emptyDir: {}\n---\n# Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-apiserver-resource-reader-cluster-role-binding.yaml\napiVersion:
    rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: custom-metrics-resource-reader\nroleRef:\n
    \ apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: custom-metrics-resource-reader\nsubjects:\n-
    kind: ServiceAccount\n  name: custom-metrics-apiserver\n  namespace: custom-metrics\n---\n#
    Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-apiserver-service-account.yaml\nkind:
    ServiceAccount\napiVersion: v1\nmetadata:\n  name: custom-metrics-apiserver\n
    \ namespace: custom-metrics\n---\n# Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-apiserver-service.yaml\napiVersion:
    v1\nkind: Service\nmetadata:\n  name: custom-metrics-apiserver\n  namespace: custom-metrics\nspec:\n
    \ ports:\n  - port: 443\n    targetPort: 6443\n  selector:\n    app: custom-metrics-apiserver\n---\n#
    Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-apiservice.yaml\napiVersion:
    apiregistration.k8s.io/v1\nkind: APIService\nmetadata:\n  name: v1beta1.custom.metrics.k8s.io\nspec:\n
    \ service:\n    name: custom-metrics-apiserver\n    namespace: custom-metrics\n
    \ group: custom.metrics.k8s.io\n  version: v1beta1\n  insecureSkipTLSVerify: true\n
    \ groupPriorityMinimum: 100\n  versionPriority: 100\n---\n# Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-cluster-role.yaml\napiVersion:
    rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: custom-metrics-server-resources\nrules:\n-
    apiGroups:\n  - \"\"\n  resources: [\"*\"]\n  verbs: [\"*\"]\n---\n# Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-config-map.yaml\napiVersion:
    v1\nkind: ConfigMap\nmetadata:\n  name: adapter-config\n  namespace: custom-metrics\ndata:\n
    \ config.yaml: |\n    rules:\n    - seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n
    \     seriesFilters: []\n      resources:\n        overrides:\n          namespace:\n
    \           resource: namespace\n          pod_name:\n            resource: pod\n
    \     name:\n        matches: ^container_(.*)_seconds_total$\n        as: \"\"\n
    \     metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!=\"POD\"}[1m]))
    by (<<.GroupBy>>)\n    - seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n
    \     seriesFilters:\n      - isNot: ^container_.*_seconds_total$\n      resources:\n
    \       overrides:\n          namespace:\n            resource: namespace\n          pod_name:\n
    \           resource: pod\n      name:\n        matches: ^container_(.*)_total$\n
    \       as: \"\"\n      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>,container_name!=\"POD\"}[1m]))
    by (<<.GroupBy>>)\n    - seriesQuery: '{__name__=~\"^container_.*\",container_name!=\"POD\",namespace!=\"\",pod_name!=\"\"}'\n
    \     seriesFilters:\n      - isNot: ^container_.*_total$\n      resources:\n
    \       overrides:\n          namespace:\n            resource: namespace\n          pod_name:\n
    \           resource: pod\n      name:\n        matches: ^container_(.*)$\n        as:
    \"\"\n      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,container_name!=\"POD\"})
    by (<<.GroupBy>>)\n    - seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n
    \     seriesFilters:\n      - isNot: .*_total$\n      resources:\n        template:
    <<.Resource>>\n      name:\n        matches: \"\"\n        as: \"\"\n      metricsQuery:
    sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)\n    - seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n
    \     seriesFilters:\n      - isNot: .*_seconds_total\n      resources:\n        template:
    <<.Resource>>\n      name:\n        matches: ^(.*)_total$\n        as: \"\"\n
    \     metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>)\n
    \   - seriesQuery: '{__name__=~\"^node_.*\"}'\n      resources:\n        overrides:\n
    \         instance:\n            resource: node\n      name:\n        matches:
    ^node_(.*)\n      metricsQuery: <<.Series>>\n    - seriesQuery: '{namespace!=\"\",__name__!~\"^container_.*\"}'\n
    \     seriesFilters: []\n      resources:\n        template: <<.Resource>>\n      name:\n
    \       matches: ^(.*)_seconds_total$\n        as: \"\"\n      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}[1m])
    by (<<.GroupBy>>)\n    # Fake energy consumption (based on CPU and fake coefficient)\n
    \   - seriesQuery: '{__name__=\"node_cpu_seconds_total\"}'\n      resources:\n
    \       overrides:\n          instance:\n            resource: node\n      name:\n
    \       matches: '.*'\n        as: \"node_fake_energy_consumption\"\n      metricsQuery:
    1000 + ((100 - 100 * (avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[1m]))))
    * 100)\n    # Fake energy target (from target-exporter service)\n    - seriesQuery:
    '{__name__=\"fake_energy_target\"}'\n      resources:\n        overrides:\n          exported_instance:\n
    \           resource: node\n      name:\n        matches: '.*'\n        as: \"node_fake_energy_target\"\n
    \     metricsQuery: fake_energy_target\n      # Difference between fake energy
    consumption and fake energy target\n    - seriesQuery: '{__name__=\"fake_energy_target\"}'\n
    \     resources:\n        overrides:\n          instance:\n            resource:
    node\n      name:\n        matches: '.*'\n        as: \"node_fake_energy_target_diff\"\n
    \     metricsQuery: avg by (instance) (label_replace(fake_energy_target, \"instance\",
    \"$1\", \"exported_instance\", \"(.*)\")) - 100 + 100 * avg by (instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[1m]))\n
    \     # Schedulable metric true/false for nodes\n    - seriesQuery: '{__name__=\"schedulable\"}'\n
    \     resources:\n        overrides:\n          instance:\n            resource:
    node\n      name:\n        matches: '.*'\n        as: \"node_schedulable\"\n      metricsQuery:
    label_replace(schedulable, \"instance\", \"$1\", \"exported_instance\", \"(.*)\")\n---\n#
    Source: prometheus_custom_metrics_helm_chart/templates/custom-metrics-resource-reader-cluster-role.yaml\napiVersion:
    rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: custom-metrics-resource-reader\nrules:\n-
    apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  - pods\n  - services\n  -
    nodes\n  verbs:\n  - get\n  - list\n  - watch\n---\napiVersion: v1\ndata:\n  tls.crt:
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNsakNDQVg0Q0NRRDZkSC9pQ0ZYYzZUQU5CZ2txaGtpRzl3MEJBUXNGQURBTk1Rc3dDUVlEVlFRRERBSmoKWVRBZUZ3MHlNakEyTURreE1qUTJNakJhRncweU16QTJNRGt4TWpRMk1qQmFNQTB4Q3pBSkJnTlZCQU1NQW1OaApNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZLTHZ4R1hQVkNndFlFckJ4dHp1Cmk5M2JLTURDa25nRFVLMUpwRkRKb1FuRlFnV3REZGU3Q0ZmaXVXT3d0SmR5eWN4dVZXRlJBMEducGhaRUc3S0gKdmVwcnh6dWtjVEhUNHA5bXVUM2QzTTlKY1dQbUdueHd0NXU0Qkt1d3pySk1CbDk1L2g4NnBLL1ZDRDh0U1BHUAovaitBUUF2YzBzWFJYZEc2czJFN05KV0dIRElQVFpEQ01JVTVTMmhKRTIzUlQ5V2F6dVZ4aVJTQThRLzZMNml0CmRDdDZ2QUxqcUhCOTliRUFmQmlsMDFsb1UvYjVuZDVLZTJ6cXo0b2h1NW9pUFZlZjVUck9RT0p4RUZCb1llK08KZEFJT3U1YmdtV2VTWnJVeTRqbldaeWU2TUtacHVIeDhPZzFPTSthUTFwT3JTZUxOcS9HNVdPR0hWUlNKVlBpbApkUUlEQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjY1U29PZ3ZTVml0L1RpSFdSMUF6Y25BYklpV1hiCnl1dGxuQmh5UjdzaUwvZzEvUThUSnZVRngrbEtja1ROMGg1R3lzRHZjVkVhM2VVdWQvUUd6eGVnTEVlL1J4aEkKY3NPNGlQMDFINGl0UlVWRjB6bEZXMFdoLy80aXpEMmJjSG5HaUNnaXFZcXlzZEFvMnFBQUdid09IS0EraGtWcgo4TEM0ZW5EMS84OGFONFJiaG9XS0xMMUJEUXpvZXZMaGRDRlB4a3Rtdm5PY3F5Zm01L3BaNTFMYk81cDBWOVhtCjVrekdzaUg4Q1I2Vlc0bFhiUFZjN2tRTCs1OXJGYlV3Wml5U3VVRS9ITjdCWDNsbmtVeVM5cHNWQkZwU3dFdVcKd3RsQ2dLbzVmMW5OR3RjdU1ZUG8vaytxRXRLMHhqTS9NUTRtT3dLQ0VSc1JETEhwMFlSSDJkSlMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n
    \ tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV3QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktvd2dnU21BZ0VBQW9JQkFRQzhvdS9FWmM5VUtDMWcKU3NIRzNPNkwzZHNvd01LU2VBTlFyVW1rVU1taENjVkNCYTBOMTdzSVYrSzVZN0MwbDNMSnpHNVZZVkVEUWFlbQpGa1Fic29lOTZtdkhPNlJ4TWRQaW4yYTVQZDNjejBseFkrWWFmSEMzbTdnRXE3RE9za3dHWDNuK0h6cWtyOVVJClB5MUk4WS8rUDRCQUM5elN4ZEZkMGJxellUczBsWVljTWc5TmtNSXdoVGxMYUVrVGJkRlAxWnJPNVhHSkZJRHgKRC9vdnFLMTBLM3E4QXVPb2NIMzFzUUI4R0tYVFdXaFQ5dm1kM2twN2JPclBpaUc3bWlJOVY1L2xPczVBNG5FUQpVR2hoNzQ1MEFnNjdsdUNaWjVKbXRUTGlPZFpuSjdvd3BtbTRmSHc2RFU0ejVwRFdrNnRKNHMycjhibFk0WWRWCkZJbFUrS1YxQWdNQkFBRUNnZ0VCQUo5NUxEU2dVYWYzRTIxOXBkYW1QckZXRFFxbDg1aDZCMnQwSkhiYXFhc1EKSklpTlhlRC9DYXFqQ2hUcTk1K2xEYkVXdUF4TWFuM1RTcFU1NjdoeXRSbFVqbXR2dTdUS2lEUGx5S1ZBYlVsWQpvT0ZRc0Y2aDUzVUNHNDh2U3hsaldLeG1tUzdDWGdTT2RnNHp3dWdRK0VmY2pXTVg1RWI0WCtqdC91WFpoSUVOCmwzemVWQ0kyZDBEbkRUa2swbG0va0EwUmthOWxxMWVLL3VNN1hkQjdhYUhKWENISG8va1JaSmk1YXE0WWtmQ0IKWk5uYUZhUmgxbUszK2xaMEJxcER0aXlDYWNHazBQekphTXN3QU92NVZDTjhoY1NSbTJZVE1TY3gzcmpBQW9uNQorVnpjUGF0b000ZVRzRkVRYjZoeTB4L2cwbVJjdmQ3czBpRUZRREp5QVVFQ2dZRUE2ZFI4MTV4ZzBjVm1yNE91CkZPcEZmMTliRkZsMWlLSFZmTU9aN0o5R3MrVSt6NzMwdTN3alkrazd3T1pIdGZqMVhGL1I3UEpUdk5GdHVyOXkKYzBoWDhDdnJwWjZUM1ViS0grdzVsNk9MZDVhM2xCbVhCek9tT0crTDI5YmJJKysxNy9PeU5RaDFFTE43WVVzUApONHlseWlaaGF1VHpKVG90QjIvQk1SZHZNQ1VDZ1lFQXpvV0RTSmRzMGxQdysrRGhtdk50Qk5mU0ZkTU9lQU9FCmYydHh1NHFMd3lhV3FYUC84Z0lOMXRDZUdMY0x1VUcwUWQ2U1lmTHF0UjdvZ0M5eUdHTmhkeG9zeW5DQWpSVkYKWkYrYU5XdWMrTmRUME9FSkU1Z3I4MDgvTzREVVZaTmZpR0h3Ty8xYW9HMVNqak1BY0x2ZFN6TVRxbXJyc3JSbwpJcysrK0RDOHR4RUNnWUVBeDQyYUJYL2xlT0NZbzgwak1hSkZNVkMxc0FZd3NpdzZ2OEZHaVpQY2lRWnB0bTBNCmdUeU9EMlFxcEpOaU84QjkxUm5KVkFmeXdyK1FmOEdHOFMrYUxOT3V4YWN4MWJQbUo1dzRBbHVHV01iOVlKeisKTVIwNURBeldOUVdGKzRORnA4UTRIOTVaMmFqeThMTllCelkyL3ZBR1QyMll1L3FNRno2ZWgwRFNtU2tDZ1lFQQp1SzFoMmM4M1M5b3VmRDc3MytGZ2t0MGdDODRoZVNiRUhHR0xZY2FoOXBBU1dGUFlBNlRjbFVVV3EwazhuWnhvCndpSnpTazI4bnR5VjB0TWF0ejVma084Q01NRnI0ejJyUVBmUTRZWnE1NGMrZDJKVkNJV2lmOEJVN2pQbExPVk4KbjVyZEJmZ29TNStYSEh2MUg5cVBLRWp6aEFoNjN1SSs0U3BmUG5mdXVkRUNnWUVBblRoYTFRakpoMHM1dkJ2cQp5UVgwWThvbXFkR1QxZldLTncwQTR2MUQ2T2taYk5XRkUzRVVLRUNCUzhEaUc3Q3d6L3NHT20rc2szQU9HVURZCkE4MTd0RFZ3a2VoNEhoRFB5a1dRRVpINXBNUmNWUm5aaU1wUktmUjhGQW42U3NTdzRvWCs5Vkl5RmxBaHFPYSsKeEk2ZWJ3N2NmR01XYTRIYWZLLzluVTgxempvPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==\nkind:
    Secret\nmetadata:\n  name: cm-adapter-serving-certs\n  namespace: custom-metrics\ntype:
    kubernetes.io/tls"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: custom-metrics-configmap
