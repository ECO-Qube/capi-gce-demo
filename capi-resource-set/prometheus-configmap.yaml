apiVersion: v1
data:
  prometheus.yaml: "---\nkind: Namespace\napiVersion: v1\nmetadata:\n  name: monitoring\n
    \ labels:\n    name: monitoring\n---\n# Source: prometheus_helm_chart/templates/prometheus-cluseterRole.yaml\napiVersion:
    rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n-
    apiGroups: [\"\"]\n  resources:\n  - nodes\n  - nodes/proxy\n  - services\n  -
    endpoints\n  - pods\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups:\n  -
    extensions\n  resources:\n  - ingresses\n  verbs: [\"get\", \"list\", \"watch\"]\n-
    nonResourceURLs: [\"/metrics\"]\n  verbs: [\"get\"]\n---\n# Source: prometheus_helm_chart/templates/prometheus-cluseterRole.yaml\napiVersion:
    rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n
    \ apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n-
    kind: ServiceAccount\n  name: default\n  namespace: monitoring\n---\n# Source:
    prometheus_helm_chart/templates/prometheus-config-map.yaml\napiVersion: v1\nkind:
    ConfigMap\nmetadata:\n  name: prometheus-server-conf\n  labels:\n    name: prometheus-server-conf\n
    \ namespace: monitoring\ndata:\n  prometheus.rules: |-\n    groups:\n    - name:
    demo alert\n      rules:\n      - alert: High CPU USAGE\n        expr: sum(node_load1)
    > 2\n        for: 10s\n        labels:\n          severity: slack\n        annotations:\n
    \         summary: More than 2 cores are now in use.\n  prometheus.yml: |-\n    global:\n
    \     scrape_interval: 5s\n      evaluation_interval: 5s\n    rule_files:\n      -
    /etc/prometheus/prometheus.rules\n    alerting:\n      alertmanagers:\n      -
    scheme: http\n        static_configs:\n        - targets:\n          - \"alertmanager.monitoring.svc:9093\"\n\n
    \   scrape_configs:\n      - job_name: metrics-target-exporter\n        static_configs:\n
    \         - targets:\n            - \"target-exporter.target-exporter.svc.cluster.local:2112\"\n
    \     - job_name: 'kubernetes-apiservers'\n\n        kubernetes_sd_configs:\n
    \       - role: endpoints\n        scheme: https\n\n        tls_config:\n          ca_file:
    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        bearer_token_file:
    /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        relabel_configs:\n
    \       - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,
    __meta_kubernetes_endpoint_port_name]\n          action: keep\n          regex:
    default;kubernetes;https\n\n      - job_name: 'kubernetes-nodes'\n\n        scheme:
    https\n\n        tls_config:\n          insecure_skip_verify: true\n          ca_file:
    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n        bearer_token_file:
    /var/run/secrets/kubernetes.io/serviceaccount/token\n\n        kubernetes_sd_configs:\n
    \       - role: node\n\n        relabel_configs:\n        - action: labelmap\n
    \         regex: __meta_kubernetes_node_label_(.+)\n        - target_label: __address__\n
    \         replacement: kubernetes.default.svc:443\n        - source_labels: [__meta_kubernetes_node_name]\n
    \         regex: (.+)\n          target_label: __metrics_path__\n          replacement:
    /api/v1/nodes/${1}/proxy/metrics\n        - source_labels: [__meta_kubernetes_node_name]\n
    \         action: replace\n          target_label: node\n\n      - job_name: 'kubernetes-node-exporter'\n
    \       tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n
    \         insecure_skip_verify: true\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n
    \       scheme: https\n        kubernetes_sd_configs:\n        - role: node\n
    \       relabel_configs:\n        - source_labels: [__address__]\n          regex:
    ^(.*):\\d+$\n          target_label: __address__\n          replacement: $1:9100\n
    \       - target_label: __scheme__\n          replacement: http\n        # Host
    name\n        \n      - job_name: 'kubernetes-pods'\n\n        kubernetes_sd_configs:\n
    \       - role: pod\n\n        relabel_configs:\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n
    \         action: keep\n          regex: true\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n
    \         action: replace\n          target_label: __metrics_path__\n          regex:
    (.+)\n        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n
    \         action: replace\n          regex: ([^:]+)(?::\\d+)?;(\\d+)\n          replacement:
    $1:$2\n          target_label: __address__\n        - action: labelmap\n          regex:
    __meta_kubernetes_pod_label_(.+)\n        - source_labels: [__meta_kubernetes_namespace]\n
    \         action: replace\n          target_label: kubernetes_namespace\n        -
    source_labels: [__meta_kubernetes_pod_name]\n          action: replace\n          target_label:
    kubernetes_pod_name\n\n      - job_name: 'kubernetes-cadvisor'\n\n        scheme:
    https\n\n        tls_config:\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n
    \       bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n
    \       kubernetes_sd_configs:\n        - role: node\n\n        relabel_configs:\n
    \       - action: labelmap\n          regex: __meta_kubernetes_node_label_(.+)\n
    \       - target_label: __address__\n          replacement: kubernetes.default.svc:443\n
    \       - source_labels: [__meta_kubernetes_node_name]\n          regex: (.+)\n
    \         target_label: __metrics_path__\n          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor\n---\n#
    Source: prometheus_helm_chart/templates/prometheus-deployment.yaml\napiVersion:
    apps/v1 \nkind: Deployment\nmetadata:\n  name: prometheus-deployment\n  namespace:
    monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: prometheus-server\n
    \ template:\n    metadata:\n      labels:\n        app: prometheus-server\n    spec:\n
    \     containers:\n        - name: prometheus\n          image: prom/prometheus:v2.2.1\n
    \         args:\n            - \"--config.file=/etc/prometheus/prometheus.yml\"\n
    \           - \"--storage.tsdb.path=/prometheus/\"\n          ports:\n            -
    containerPort: 9090\n          volumeMounts:\n            - name: prometheus-config-volume\n
    \             mountPath: /etc/prometheus/\n            - name: prometheus-storage-volume\n
    \             mountPath: /prometheus/\n      volumes:\n        - name: prometheus-config-volume\n
    \         configMap:\n            defaultMode: 420\n            name: prometheus-server-conf\n
    \ \n        - name: prometheus-storage-volume\n          emptyDir: {}\n---\n#
    Source: prometheus_helm_chart/templates/prometheus-service.yaml\napiVersion: v1\nkind:
    Service\nmetadata:\n  name: prometheus-service\n  namespace: monitoring\nspec:\n
    \ selector: \n    app: prometheus-server\n  type: NodePort  \n  ports:\n   -  targetPort:
    9090\n      port: 8080 \n      nodePort: 30000\n---\n# Source: prometheus_helm_chart/templates/prometheus-service.yaml\napiVersion:
    v1\nkind: Service\nmetadata:\n  name: prom-service\n  namespace: monitoring\n
    \ labels:\n    app: prometheus-server\n  \n  annotations:\n      prometheus.io/scrape:
    'true'\n      prometheus.io/path:   /metrics\n      prometheus.io/port:   '9090'\n\n\nspec:\n
    \ ports:\n  - port: 9090 \n    targetPort: 9090\n    protocol: TCP\n  selector:\n
    \   app: prometheus-server\n"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: prometheus-configmap
